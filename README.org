* consolor

[[https://travis-ci.org/paetzke/consolor][https://travis-ci.org/paetzke/consolor.png?branch=master]]
[[https://coveralls.io/r/paetzke/consolor?branch=master][https://coveralls.io/repos/paetzke/consolor/badge.png?branch=master]]
[[https://pypi.python.org/pypi/consolor/][https://img.shields.io/pypi/v/consolor.svg]]

Consolor provides highlighting functions for terminals.

It comes with there 3 functions:

- get_line :: Returns a string with the given formatting.
- print_line :: Prints a string with the given formatting.
- update_line :: Overwrites the output of the current line and prints s on the same line without a new line.

All these functions accept the following formatting parameters:

- /bold/: bool, default False
- /underline/: bool, default False
- /blinking/: bool, default False
- /color/: str, default None
- /bgcolor/: str, default None

[[https://paetzke.me/static/images/consolor.png]]

Some examples:

#+BEGIN_SRC python
import consolor

consolor.print_line('light green', color=consolor.Color.LightGreen)
consolor.print_line('underline', underline=True)
consolor.print_line('green bg', bgcolor=consolor.BgColor.Green)
consolor.update_line('0%')
consolor.update_line('100%')
print()
#+END_SRC

For more colors and background colors see /consolor.Color/ and /consolor.BgColor/.

You can also use it in builtin /print()/:

#+BEGIN_SRC python
import consolor

print(consolor.Color.Red, 'Red')
print('Red two')
print(consolor.Color.Reset, end='') # You have to handle resetting your self.
print('Not Red')

print(consolor.BgColor.Red, 'Red')
print('Red two', consolor.BgColor.Reset)
print('None')
#+END_SRC

To install =consolor= use pip.

#+BEGIN_SRC python
pip install consolor
#+END_SRC


** Bugs and improvements

Feel free to open tickets or send pull requests with improvements.
These [[https://github.com/paetzke/consolor/graphs/contributors][contributors]] have done so.


** Links

- [[http://ascii-table.com/ansi-escape-sequences-vt-100.php]]
- [[http://wiki.ubuntuusers.de/Bash/Prompt]]


** Copyright

Copyright (c) 2013-2015 Friedrich PÃ¤tzke.
See [[LICENSE]] for further details.


See you. [[https://twitter.com/paetzke][Friedrich]].
